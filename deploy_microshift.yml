--- 
- hosts: localhost
  name: Deploy Microshift on "{{ provider }}"
  gather_facts: false
  vars:
    provider: hetzner
    ssh_pub: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    ssh_priv: "~/.ssh/id_rsa"
    default_hostname: true
    hcloud_token: "{{ lookup('env','HCLOUD_TOKEN') }}"
    tf_state: present
    microshift_version: 4.8.0-0.microshift-2022-04-20-182108
  tasks:

    - name: Generate butane file
      template:
        src: config/microshift.yml.j2
        dest: config/microshift.yml

    - name: Generate ignite file
      containers.podman.podman_container:
        image: quay.io/coreos/butane:release
        name: butane
        rm: true
        interactive: true
        detach: no
        command:
          - "--strict"
          - "--raw"
          - "/microshift.yml" 
        volume:
          - "{{ playbook_dir }}/config/microshift.yml:/microshift.yml:Z"
        state: started
      register: ignite
      changed_when: false

    - name: Manage with terraform
      community.general.terraform:
        project_path: "terraform/hetzner"
        force_init: true
        variables:
          ssh_public_key: "{{ ssh_pub }}"
          hcloud_token: "{{ hcloud_token }}"
          ignite_file: "{{ ignite.stdout | b64encode }}"
        state: "{{ tf_state }}"
      register: tf_output

    - name: Add microshift VM to host
      add_host:
        name: microshift
        ansible_host: "{{ tf_output.outputs.microshift_ip.value }}"
        ansible_connection: ssh
        ansible_user: core
        ansible_ssh_private_key_file: "{{ ssh_priv }}"
        become: true
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
      changed_when: false

    - set_fact:
        microshift_hostname: "{{ tf_output.outputs.microshift_ip.value }}.nip.io"
    
    - name: Get Kubeconfig    
      raw: sudo cat /var/lib/containers/storage/volumes/microshift-data/_data/microshift/resources/kubeadmin/kubeconfig
      delegate_to: microshift
      register: kubeconfig
      changed_when: false

    - copy: 
        content: "{{ kubeconfig.stdout | replace('127.0.0.1', microshift_hostname) }}" 
        dest: kubeconfig

    - name: Create namespace
      kubernetes.core.k8s:
        name: test
        api_version: v1
        kind: Namespace
        state: present
        kubeconfig: kubeconfig
